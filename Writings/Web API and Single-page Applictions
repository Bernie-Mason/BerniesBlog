The Web API feature is a  relatively new feature to the ASP.NET platform that allows you to quickly and easily create Web services that provide an API to HTTP clients, known as Web APIs. This feature is based on the same foundation as the MVC Framework applications, but is not part of the MVC Framework.
Instead Microsoft has taken some key classes and characteristics that are associated with the System.Web.Mvc namespace and associated them with the System.Web.Http namespace. The idea is that Web API is part of the core ASP.NET platform and can be used in other types of Web applications or used as a stand-alone Web services engine. One of the main uses for Web API is to create single-page applications (SPAs) by combining the Web API with MVC Framework features.
Web API simplifies creating Web services.

The term single page application is a broadly applied term. The most consistently-used definition is a web application whose initial content is delivered as a combination of HTML and JavaScript and whose subsequent operations are performed using a RESTful web service that delivers data via JSON in response to Ajax requests.
This differs from the kind of application we've been making, where operations performed by the user result in new HTML documents being generated in response to synchronous HTTP requests, which are called round-trip applications.
The advantages of SPA are that less bandwidth is required and that the user receives a smoother experience. The disadvantage is that the smoother experience can be harder to achieve and that the complexity of the JavaScript code required for a SPA demands careful design and testing. Most applications mix and match SPA and RTA techniques, where each major functional area of the application is delivered as a SPA, and navigation between functional areas is managed using standard HTTP requests that create a new HTML document


Knockjs is a javascript library that microsoft has developed for single-page applications

The Web API feature is based on adding a special kind of controller to an MVC Framework application, called an API Controller. It has two distinct characteristics:
1. Action methods return model, rather than ActionResult, objects
2. Action methods are selected based on HTTP methods used in the request

The model objects that are returned from an API controller action method are encoded as JSON and sent to the client. API controllers are designed to deliver Web data services so they do not support views, layouts or any of the other features we typically use to generate HTML in MVC.

The inability of an API controller to generate HTML from views is the reason that single-page applications combine standard MVC Framework techniques with the Web API. The MVC Framework performs the steps required to deliver HTML content to the user (including authentication, authorization and selecting and rendering a view). Once HTML is delivered to the browser, the Ajax requests generated by the JavaScript it contains are handled by the Web API controller.
